{"version":3,"sources":["types/types.js","reducers/empReducer.js","store/store.js","components/ui/Navbar.js","hooks/useForm.js","actions/empleados.js","components/screens/CreateEmpScreen.js","components/screens/HomeScreen.js","components/ui/ListEmp.js","components/screens/ListEmpScreen.js","selectors/getEmpByRfc.js","components/screens/EmployeeScreen.js","components/screens/EditEmpScreen.js","routers/AppRouter.js","MenitaApp.js","index.js"],"names":["types","initialState","empleados","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","workers","state","action","type","payload","map","emp","rfc","empleado","filter","store","createStore","applyMiddleware","thunk","Navbar","className","to","exact","useForm","useState","values","setValues","reset","handleInputChange","e","target","name","value","lsEmpleados","JSON","parse","localStorage","getItem","startDeleteEmp","dispatch","setItem","stringify","deleteEmpleado","crearEmpleado","loadEmpleados","id","updateEmpleado","CreateEmpScreen","history","useHistory","useDispatch","nombre","fecha","departamento","sueldo","status","formValues","isFormValid","validator","isEmpty","undefined","Swal","fire","isAfter","onSubmit","preventDefault","push","placeholder","autoComplete","minLength","maxLength","onChange","HomeScreen","onClick","ListEmp","title","showCancelButton","confirmButtonText","then","result","isConfirmed","replace","ListEmpScreen","useSelector","empleadosTabla","setEmpleados","dep","stat","filtros","setFiltros","useEffect","console","log","getEmpByRfc","find","EmployeeScreen","empRFC","useParams","src","alt","EditEmpScreen","startUpdateEmp","AppRouter","path","component","MenitaApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3b5198a.chunk.js","sourcesContent":["\r\nexport const types = {\r\n    createEmp:  '[Empleados] Crear Empleado',\r\n    loadEmp:    '[Empleados] Cargar Empleados',\r\n    updateEmp:  '[Empleados] Actualizar Empleado',\r\n    deleteEmp:  '[Empleados] Eliminar Empleado',\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    empleados: [],\r\n}\r\n\r\nexport const empReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case types.createEmp:\r\n            \r\n            return {\r\n                ...state,\r\n                empleados: [ ...state.empleados, action.payload ]\r\n            }\r\n\r\n        case types.loadEmp:\r\n        \r\n            return {\r\n                ...state,\r\n                empleados: [ ...action.payload ]\r\n            }\r\n\r\n        case types.updateEmp:\r\n        \r\n            return {\r\n                ...state,\r\n                empleados: state.empleados.map(\r\n                    emp => (emp.rfc === action.payload.rfc)\r\n                        ? action.payload.empleado \r\n                        : emp\r\n                )\r\n            }\r\n            \r\n        case types.deleteEmp:\r\n        \r\n            return {\r\n                ...state,\r\n                empleados: state.empleados.filter(\r\n                    emp => emp.rfc !== action.payload\r\n                )\r\n            }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { empReducer } from \"../reducers/empReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n// reducers a utilizar en la aplicación\r\nconst reducers = combineReducers({\r\n    workers: empReducer,\r\n});\r\n\r\n// Crear el 'Store'\r\nexport const store = createStore( \r\n    reducers, \r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\n\r\nexport const Navbar = () => {\r\n    \r\n    \r\n    \r\n    return (\r\n        <nav className=\"navbar\" >\r\n            <Link to=\"/menita-rh/homepage\" className=\"navbar__logo\">\r\n                Menita-RH\r\n            </Link>\r\n\r\n            <div className=\"navbar__links\">\r\n                <NavLink\r\n                    className=\"navbar__links__link\"\r\n                    exact\r\n                    to=\"/menita-rh/create-emp\"\r\n                >\r\n                    Nuevo empleado\r\n                </NavLink>\r\n\r\n                <NavLink\r\n                    className=\"navbar__links__link\"\r\n                    exact\r\n                    to=\"/menita-rh/list-emp\"\r\n                >\r\n                    Lista de empleados\r\n                </NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","\r\nimport { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [ values, setValues ] = useState( initialState );\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = (e) => { \r\n\r\n        setValues( {\r\n            ...values,\r\n            [ e.target.name ]: e.target.value\r\n        } )\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import { types } from \"../types/types\"\r\n\r\n//get ls empleados\r\nlet lsEmpleados = JSON.parse( localStorage.getItem('empleados')) || [];\r\n\r\nexport const startCreateEmp = ( empleado ) => {\r\n    \r\n    return ( dispatch ) => {\r\n        lsEmpleados.push(empleado);\r\n        localStorage.setItem('empleados', JSON.stringify( lsEmpleados ));\r\n\r\n        dispatch( crearEmpleado( empleado ) );\r\n    }\r\n}\r\n\r\nexport const startLoadingEmp = () => {\r\n\r\n    return ( dispatch ) => {\r\n        dispatch( loadEmpleados( lsEmpleados ) );\r\n    }\r\n}\r\n\r\nexport const startUpdateEmp = ( rfc, empleado ) => {\r\n\r\n    return ( dispatch ) => {\r\n        lsEmpleados = lsEmpleados.map(\r\n            emp => ( emp.rfc === rfc )\r\n                ? emp = empleado\r\n                : emp\r\n        );\r\n        localStorage.setItem('empleados', JSON.stringify( lsEmpleados ));\r\n\r\n        dispatch( updateEmpleado( rfc, empleado ) );\r\n    }\r\n}\r\n\r\nexport const startDeleteEmp = ( rfc ) => {\r\n\r\n    return ( dispatch ) => {\r\n        lsEmpleados = lsEmpleados.filter( emp => emp.rfc !== rfc );\r\n        localStorage.setItem('empleados', JSON.stringify( lsEmpleados ));\r\n        \r\n        dispatch( deleteEmpleado( rfc ) );\r\n    }\r\n}\r\n\r\n\r\n//actions\r\nexport const crearEmpleado = ( empleado ) => {\r\n    return {\r\n        type: types.createEmp,\r\n        payload: empleado\r\n    }\r\n}\r\n\r\nexport const loadEmpleados = ( empleados ) => {\r\n    return {\r\n        type: types.loadEmp,\r\n        payload: empleados\r\n    }\r\n}\r\n\r\nexport const deleteEmpleado = ( id ) => {\r\n\r\n    return {\r\n        type: types.deleteEmp,\r\n\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const updateEmpleado = ( rfc, empleado ) => {\r\n\r\n    return {\r\n        type: types.updateEmp,\r\n\r\n        payload: {\r\n            rfc,\r\n            empleado: {\r\n                rfc,\r\n                ...empleado\r\n            }\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport validator from 'validator';\r\nimport Swal from 'sweetalert2';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startCreateEmp } from '../../actions/empleados';\r\n\r\n\r\n\r\n\r\nexport const CreateEmpScreen = () => {\r\n    \r\n\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    // use form\r\n    const [ formValues, handleInputChange, reset ] = useForm({\r\n        nombre: '',\r\n        rfc: '',\r\n        fecha: '',\r\n        departamento: 'Recursos Humanos',\r\n        sueldo: 100,\r\n        status: 'Activo',\r\n    });\r\n    const { nombre, rfc, fecha, departamento, sueldo, status } = formValues;\r\n\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ) { // Sí el formulario es válid\r\n            dispatch( startCreateEmp( formValues ) );\r\n            reset();\r\n            history.push('/menita-rh/list-emp');  \r\n            Swal.fire('Empleado agregado', 'El empleado se ha registrado correctamente.' ,'success');\r\n        }\r\n    }\r\n\r\n    //Validación del formulario\r\n    const isFormValid = () => {\r\n\r\n        if ( validator.isEmpty( nombre ) || nombre === undefined ) {\r\n            Swal.fire('Error', 'Debe ingresar un nombre.' ,'error');\r\n            return false;\r\n\r\n        } else if ( validator.isEmpty( rfc ) ) {\r\n            Swal.fire('Error', 'Debe ingresar un RFC.' ,'error');\r\n            return false;\r\n\r\n        } else if ( validator.isEmpty( fecha ) || validator.isAfter(fecha, '2013-11-20') ) {\r\n            Swal.fire('Error', 'Debe ingresar una fecha. Y sólo puede registrar empleados mayores de edad.' ,'error');\r\n            return false;\r\n\r\n        } else if ( sueldo <= 0 || sueldo > 999999 ) {\r\n            Swal.fire('Error', 'El empleado debe tener un sueldo no mayor a $999,999' ,'error');\r\n            return false;\r\n\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"create__main\">\r\n            <form onSubmit={ handleSubmit } className=\"create__main__form\">\r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>Nombre</i>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"nombre\"\r\n                        placeholder=\"Nombre (Mínimo 3 carácteres)\"\r\n                        autoComplete=\"off\"\r\n                        minLength=\"3\"\r\n                        maxLength=\"50\"\r\n                        value={ nombre }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>RFC</i>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"rfc\"\r\n                        placeholder=\"RFC (19 carácteres)\"\r\n                        autoComplete=\"off\"\r\n                        minLength=\"19\"\r\n                        maxLength=\"19\"\r\n                        value={ rfc }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>Fecha de nacimiento (sólo mayores de edad)</i>\r\n                    <input \r\n                        type=\"date\" \r\n                        name=\"fecha\"    \r\n                        value={ fecha }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>Departamento</i>\r\n                    <select \r\n                        name=\"departamento\"\r\n                        value={ departamento }\r\n                        onChange={ handleInputChange }\r\n                    >\r\n                        <option value=\"Recursos humanos\">Recursos Humanos</option>\r\n                        <option value=\"Sistemas\">Sistemas</option>\r\n                        <option value=\"Contabilidad\">Contabilidad</option>\r\n                        <option value=\"Credito y Cobranza\">Credito y Cobranza</option>\r\n                        <option value=\"Nómina\">Nómina</option>\r\n                        <option value=\"Legal\">Legal</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>Status (Sí actualmente trabaaja para la empresa)</i>\r\n                    <select \r\n                        name=\"status\"\r\n                        value={ status }\r\n                        onChange={ handleInputChange }\r\n                    >\r\n                        <option value=\"Activo\">Activo</option>\r\n                        <option value=\"Inactivo\">Inactivo</option>\r\n                    </select>\r\n                </div>\r\n                \r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>Sueldo ($1 - $999999)</i>\r\n                    <input \r\n                        type=\"number\"\r\n                        name=\"sueldo\"\r\n                        placeholder=\"Sueldo\"\r\n                        autoComplete=\"off\"\r\n                        value={ sueldo }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                >\r\n                    Añadir empleado\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { HiUserAdd } from 'react-icons/hi';\r\nimport { FaUsers } from 'react-icons/fa';\r\n\r\n\r\nexport const HomeScreen = () => {\r\n    \r\n    let history = useHistory();\r\n\r\n    const handleRedirectCreate = () => {\r\n        history.push('/menita-rh/create-emp');\r\n    }\r\n\r\n    const handleRedirectList = () => {\r\n        history.push('/menita-rh/list-emp');\r\n    }\r\n    \r\n    return (\r\n        <div className=\"home__main\">\r\n            <div className=\"home__main__element\" onClick={ handleRedirectCreate }>\r\n                <HiUserAdd className=\"home__main__element__icon\"/>\r\n                <h1>Añadir nuevo empleado</h1>\r\n            </div>\r\n\r\n            \r\n\r\n            <div className=\"home__main__element\" onClick={ handleRedirectList }>\r\n                <FaUsers className=\"home__main__element__icon\"/>\r\n                <h1>Ver lista de empleados</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FaUserEdit } from 'react-icons/fa';\r\nimport { BsFillTrashFill } from 'react-icons/bs';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { startDeleteEmp } from '../../actions/empleados';\r\n\r\nexport const ListEmp = ({ nombre, rfc, departamento, status } ) => {\r\n    \r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n\r\n        if ( status === 'Inactivo' ) {\r\n            Swal.fire({\r\n                title: '¿Seguro quieres dar de baja este empleado?',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    history.replace('/menita-rh/list-emp');  \r\n                    dispatch( startDeleteEmp( rfc ) );      \r\n                    Swal.fire('Empleado Eliminado', `El empleado ${nombre} ha sido eliminado correctamente.` ,'success');\r\n                }\r\n            });\r\n\r\n        } else {\r\n            Swal.fire('Eliminación fallida', `No es posible eliminar a un usuario que aun trabaje para la empresa. Si ${nombre} ya no forma parte de la empresa, favor de editar su registro [Status]`, 'warning');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <tr>\r\n            <td>                \r\n                <Link to={`/menita-rh/employee/${rfc}`} className=\"tableLink\">\r\n                    { nombre }\r\n                </Link>\r\n            </td>\r\n            <td>{ departamento }</td>\r\n            <td>{ status }</td>\r\n            <td>\r\n                <Link to={`/menita-rh/edit-emp/${rfc}`} className=\"tableLink\">\r\n                    <button\r\n                        className=\"ListEmp__main__table__edit\"\r\n                    >\r\n                        <FaUserEdit />\r\n                    </button>\r\n                </Link>\r\n                \r\n            </td>\r\n            <td>\r\n                <button\r\n                    className=\"ListEmp__main__table__delete\"\r\n                    onClick={ handleDelete }\r\n                >\r\n                    <BsFillTrashFill />\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { FaFilter } from 'react-icons/fa';\r\n\r\nimport { ListEmp } from '../ui/ListEmp';\r\n\r\n\r\nexport const ListEmpScreen = () => {\r\n    \r\n    const {empleados} = useSelector(state => state.workers);\r\n\r\n    const [empleadosTabla, setEmpleados] = useState(empleados);\r\n    const [filtros, setFiltros] = useState({\r\n        dep:  '',\r\n        stat: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(filtros)\r\n        if ( filtros.dep === '' && filtros.stat === '' ) {\r\n            setEmpleados(empleados);\r\n        \r\n        } else if ( filtros.dep !== '' && filtros.stat === '' ) {\r\n            setEmpleados( empleados.filter( emp => (emp.departamento === filtros.dep)) )\r\n\r\n        } else if ( filtros.dep === '' && filtros.stat !== '' ) {\r\n            setEmpleados( empleados.filter( emp => (emp.status === filtros.stat)) )\r\n            \r\n        } else if ( filtros.dep !== '' && filtros.stat !== '' ) {\r\n            setEmpleados( empleados.filter( emp => (emp.departamento === filtros.dep) && (emp.status === filtros.stat)) )\r\n            \r\n        }\r\n\r\n    }, [filtros])\r\n\r\n    \r\n    return (\r\n        <div className=\"ListEmp__main\">\r\n            <div className=\"ListEmp__filters\">\r\n                <div>\r\n                    <p><FaFilter />Departamento</p>\r\n                    <select \r\n                        name=\"departamento\"\r\n                        onChange={ (e) => setFiltros({...filtros, dep: e.target.value}) }\r\n                    >\r\n                        <option value=\"\">*</option>\r\n                        <option value=\"Recursos Humanos\">Recursos Humanos</option>\r\n                        <option value=\"Sistemas\">Sistemas</option>\r\n                        <option value=\"Contabilidad\">Contabilidad</option>\r\n                        <option value=\"Credito y Cobranza\">Credito y Cobranza</option>\r\n                        <option value=\"Nómina\">Nómina</option>\r\n                        <option value=\"Legal\">Legal</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <p><FaFilter />Status</p>\r\n                    <select \r\n                        name=\"status\"\r\n                        onChange={ (e) => setFiltros({...filtros, stat: e.target.value}) }\r\n                    >\r\n                        <option value=\"\">*</option>\r\n                        <option value=\"Activo\">Activo</option>\r\n                        <option value=\"Inactivo\">Inactivo</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <table className=\"ListEmp__main__table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Nombre</th>\r\n                        <th>Departamento</th>\r\n                        <th>Status</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                         empleadosTabla.map( emp => (\r\n                            <ListEmp \r\n                                key={ emp.rfc } \r\n                                { ...emp } // PROP de cada propiedad que contenga cada 'Note'\r\n                            />\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getEmpByRfc = ( empleados, rfc) => {\r\n    \r\n    return empleados.find( emp => emp.rfc === rfc );\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect, useHistory, useParams } from 'react-router'\r\nimport { FaUserEdit } from 'react-icons/fa';\r\nimport { BsFillTrashFill } from 'react-icons/bs';\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { getEmpByRfc } from '../../selectors/getEmpByRfc';\r\nimport { startDeleteEmp } from '../../actions/empleados';\r\n\r\n\r\n\r\nexport const EmployeeScreen = () => {\r\n\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const {empleados} = useSelector(state => state.workers);\r\n    const { empRFC } = useParams();\r\n\r\n\r\n    const empleado = getEmpByRfc( empleados, empRFC );\r\n    if ( !empleado ) {\r\n        return <Redirect to=\"/menita-rh/list-emp\" />;\r\n    }\r\n    \r\n    \r\n    const handleDelete = () => {\r\n\r\n        if ( empleado.status === 'Inactivo' ) {\r\n            Swal.fire({\r\n                title: '¿Seguro quieres dar de baja este empleado?',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    history.replace('/menita-rh/list-emp');  \r\n                    dispatch( startDeleteEmp( empleado.rfc ) );      \r\n                    Swal.fire('Empleado Eliminado', `El empleado ${empleado.nombre} ha sido eliminado correctamente.` ,'success');\r\n                }\r\n            });\r\n\r\n        } else {\r\n            Swal.fire('Eliminación fallida', `No es posible eliminar a un usuario que aun trabaje para la empresa. Si ${empleado.nombre} ya no forma parte de la empresa, favor de editar su registro [Status]`, 'warning');\r\n        }\r\n    }\r\n        \r\n    return (\r\n        <div className=\"employee__main\">\r\n            <div className=\"employee__main__card\">\r\n                <div className=\"employee__main__card__img\">\r\n                    <img src=\"https://cdn-icons-png.flaticon.com/512/432/432693.png\" alt=\"cardPhoto\" />\r\n                </div>\r\n\r\n                <div className=\"employee__main__card__info\">\r\n                    <i>Nombre</i>\r\n                    <h2>{ empleado.nombre }</h2>\r\n\r\n                    <i>Fecha de Nacimiento</i>\r\n                    <h2>{ empleado.fecha }</h2>\r\n\r\n                    <i>RFC</i>\r\n                    <h2>{ empleado.rfc }</h2>\r\n\r\n                    <i>Departamento</i>\r\n                    <h2>{ empleado.departamento }</h2>\r\n\r\n                    <i>Sueldo</i>\r\n                    <h2>$ { empleado.sueldo } / mes</h2>\r\n\r\n                    <i>Status de empleado</i>\r\n                    <h2>{ empleado.status }</h2>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"employee__main__buttons\">\r\n                <Link to={`/menita-rh/edit-emp/${empleado.rfc}`} >\r\n                    <button\r\n                        className=\"employee__main__buttons__edit\"\r\n                    >\r\n                        Editar <FaUserEdit />\r\n                    </button>\r\n                </Link>\r\n\r\n                <button\r\n                    className=\"employee__main__buttons__delete\"\r\n                    onClick={ handleDelete }\r\n                >\r\n                    Eliminar <BsFillTrashFill />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport Swal from 'sweetalert2';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { getEmpByRfc } from '../../selectors/getEmpByRfc';\r\nimport { startUpdateEmp } from '../../actions/empleados';\r\n\r\nexport const EditEmpScreen = () => {\r\n    \r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const {empleados} = useSelector(state => state.workers);\r\n    const { empRFC } = useParams();\r\n\r\n    const empleado = getEmpByRfc( empleados, empRFC );\r\n\r\n\r\n    // use form\r\n    const [ formValues, handleInputChange, reset ] = useForm({\r\n        nombre: empleado.nombre,\r\n        rfc: empleado.rfc,\r\n        fecha: empleado.fecha,\r\n        departamento: empleado.departamento,\r\n        sueldo: empleado.sueldo,\r\n        status: empleado.status,\r\n    });\r\n    const { nombre, rfc, fecha, departamento, sueldo, status } = formValues;\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ) { // Sí el formulario es válid\r\n            dispatch( startUpdateEmp( empleado.rfc ,formValues ) );\r\n            reset();\r\n            history.replace(`/menita-rh/employee/${rfc}`);  \r\n            Swal.fire('Empleado actualizado', 'El empleado se ha actualizado correctamente.' ,'success');\r\n        }\r\n    }\r\n\r\n    //Validación del formulario\r\n    const isFormValid = () => {\r\n\r\n        if ( validator.isEmpty( nombre ) || nombre === undefined ) {\r\n            Swal.fire('Error', 'Debe ingresar un nombre.' ,'error');\r\n            return false;\r\n\r\n        } else if ( validator.isEmpty( rfc ) ) {\r\n            Swal.fire('Error', 'Debe ingresar un RFC.' ,'error');\r\n            return false;\r\n\r\n        } else if ( validator.isEmpty( fecha ) || validator.isAfter(fecha, '2013-11-20') ) {\r\n            Swal.fire('Error', 'Debe ingresar una fecha. Y sólo puede registrar empleados mayores de edad.' ,'error');\r\n            return false;\r\n\r\n        } else if ( sueldo <= 0 || sueldo > 999999 ) {\r\n            Swal.fire('Error', 'El empleado debe tener un sueldo no mayor a $999,999' ,'error');\r\n            return false;\r\n\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"create__main\">\r\n            <h2>Empleado: {empleado.nombre}</h2>\r\n            <form onSubmit={ handleSubmit } className=\"create__main__form\">\r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>Nombre</i>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"nombre\"\r\n                        placeholder=\"Nombre (Mínimo 3 carácteres)\"\r\n                        autoComplete=\"off\"\r\n                        minLength=\"3\"\r\n                        maxLength=\"50\"\r\n                        value={ nombre }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>RFC</i>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"rfc\"\r\n                        placeholder=\"RFC (19 carácteres)\"\r\n                        autoComplete=\"off\"\r\n                        minLength=\"19\"\r\n                        maxLength=\"19\"\r\n                        value={ rfc }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>Fecha de nacimiento (sólo mayores de edad)</i>\r\n                    <input \r\n                        type=\"date\" \r\n                        name=\"fecha\"    \r\n                        value={ fecha }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>Departamento</i>\r\n                    <select \r\n                        name=\"departamento\"\r\n                        value={ departamento }\r\n                        onChange={ handleInputChange }\r\n                    >\r\n                        <option value=\"Recursos humanos\">Recursos Humanos</option>\r\n                        <option value=\"Sistemas\">Sistemas</option>\r\n                        <option value=\"Contabilidad\">Contabilidad</option>\r\n                        <option value=\"Credito y Cobranza\">Credito y Cobranza</option>\r\n                        <option value=\"Nómina\">Nómina</option>\r\n                        <option value=\"Legal\">Legal</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>Status (Sí actualmente trabaaja para la empresa)</i>\r\n                    <select \r\n                        name=\"status\"\r\n                        value={ status }\r\n                        onChange={ handleInputChange }\r\n                    >\r\n                        <option value=\"Activo\">Activo</option>\r\n                        <option value=\"Inactivo\">Inactivo</option>\r\n                    </select>\r\n                </div>\r\n                \r\n                <div className=\"create__main__form__element\">\r\n\r\n                    <i>Sueldo ($1 - $999999)</i>\r\n                    <input \r\n                        type=\"number\"\r\n                        name=\"sueldo\"\r\n                        placeholder=\"Sueldo\"\r\n                        autoComplete=\"off\"\r\n                        value={ sueldo }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                >\r\n                    Añadir empleado\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { Navbar } from '../components/ui/Navbar';\r\nimport { CreateEmpScreen } from '../components/screens/CreateEmpScreen';\r\nimport { HomeScreen } from '../components/screens/HomeScreen';\r\nimport { ListEmpScreen } from '../components/screens/ListEmpScreen';\r\nimport { startLoadingEmp } from '../actions/empleados';\r\nimport { EmployeeScreen } from '../components/screens/EmployeeScreen';\r\nimport { EditEmpScreen } from '../components/screens/EditEmpScreen';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    dispatch( startLoadingEmp() );\r\n    \r\n    return (\r\n        <Router>\r\n            <Navbar />\r\n\r\n            <Switch>\r\n                <Route exact path=\"/menita-rh/home\" component={ HomeScreen } />\r\n                <Route exact path=\"/menita-rh/create-emp\" component={ CreateEmpScreen } />\r\n                <Route exact path=\"/menita-rh/list-emp\" component={ ListEmpScreen } />\r\n                <Route exact path=\"/menita-rh/employee/:empRFC\" component={ EmployeeScreen } />\r\n                <Route exact path=\"/menita-rh/edit-emp/:empRFC\" component={ EditEmpScreen } />\r\n\r\n                <Redirect to=\"/menita-rh/home\" />\r\n            </Switch>\r\n            \r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\n\r\nexport const MenitaApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MenitaApp } from './MenitaApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <MenitaApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}